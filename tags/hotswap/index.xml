<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hotswap on 3dw42d-p&#39;5 8109</title>
    <link>https://blog.edward-p.xyz/tags/hotswap/</link>
    <description>Recent content in Hotswap on 3dw42d-p&#39;5 8109</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 22 Jan 2021 17:27:43 +0800</lastBuildDate><atom:link href="https://blog.edward-p.xyz/tags/hotswap/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HotswapAgent 简单使用</title>
      <link>https://blog.edward-p.xyz/posts/2021/01/hotswap-agent/</link>
      <pubDate>Fri, 22 Jan 2021 17:27:43 +0800</pubDate>
      
      <guid>https://blog.edward-p.xyz/posts/2021/01/hotswap-agent/</guid>
      <description>写在最前面 作为 JVM 语言开发者，自然都听说过大名鼎鼎的 JRebel 吧。
没听说过？ 好吧，编不下去了，直接进入主题吧
实际项目开发中的热部署需求 没有热部署: 修改代码-&amp;gt;重新编译-&amp;gt;重新部署整个项目 (通常会花费5秒以上)-&amp;gt;继续测试
有热部署: 修改代码-&amp;gt;重新编译-&amp;gt;通过调试器替换变化的字节码文件 ()-&amp;gt;继续测试
热部署为什么需要插件 其实原版 JDK 就可以实现热部署，只是功能非常地局限，可以实现方法内代码的在线更新，但不能实现新增方法和删除方法。
于是才就有了热部署插件。
JRebel 和 HotswapAgent 的区别  JRebel 更加成熟，支持更多框架和插件 JRebel 不开源，并且要价不菲！ JRebel 在热加载时会修改所有的字节码文件，因此必须要安装一个 IDE 插件才能使调试功能不受影响 HotswapAgent 只需要很简单的配置即可使用（甚至不需要写任何配置文件） HtoswapAgent 是基于 DCEVM (一款魔改增强的 JVM) 实现的，IDE 仍然可以使用 JDK 原生的 Debug 方式, 因此不需要安装额外的插件 HotswapAgent 是开源的！！！！  前置准备 (准备一个支持方法热加载的 JVM) DCEVM Dynamic Code Evolution VM (动态代码演化虚拟机) 项目地址
是一款开源项目，旨在让 JVM 能够对方法新增和删除实现热加载
 在该项目的 release 页面找到对应 JDK 版本的 Installer 使用 Installer 安装 DCEVM 到你的 JDK 环境中 通过在 VM Options 中加上 -XXaltjvm=dcevm 即可以 DCEVM 启动  问题是：DCEVM 支持的是 OpenJDK 而非 Oracle JDK ！！!</description>
    </item>
    
  </channel>
</rss>
